apiVersion: apps/v1
kind: Deployment
metadata:
  name: bankcore
  namespace: banking-prod
  labels:
    app: bankcore
    version: v2.1.0
    component: backend
  annotations:
    kubernetes.io/description: "demo enterprise banking platform with zero-downtime deployment"
spec:
  replicas: 3
  revisionHistoryLimit: 10
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # One extra pod during update
      maxUnavailable: 0  # Zero downtime - no pods unavailable
  
  selector:
    matchLabels:
      app: bankcore
      component: backend
  
  template:
    metadata:
      labels:
        app: bankcore
        version: v2.1.0
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        co.elastic.logs/enabled: "true"
    
    spec:
      # Multi-AZ pod anti-affinity
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - bankcore
            topologyKey: topology.kubernetes.io/zone
          # Prefer different nodes
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - bankcore
              topologyKey: kubernetes.io/hostname
      
      # Service account for RBAC
      serviceAccountName: bankcore
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Graceful termination
      terminationGracePeriodSeconds: 60
      
      # Init container to check DB readiness
      initContainers:
      - name: wait-for-db
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z postgres-service.banking-prod.svc.cluster.local 5432; do echo waiting for db; sleep 2; done']
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      
      containers:
      - name: bankcore
        image: bankingcorp/bankcore:v2.1.0
        imagePullPolicy: Always
        
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: management
          protocol: TCP
        
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s,prod"
        - name: JAVA_OPTS
          value: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: database.url
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # Health probes for zero downtime
        startupProbe:
          httpGet:
            path: /actuator/health/startup
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        # Lifecycle hooks for graceful shutdown
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - |
                echo "Starting graceful shutdown..."
                # Signal readiness probe failure
                curl -X POST http://localhost:8080/api/v1/health/ready/false || true
                # Wait for load balancer to remove pod
                sleep 15
                # Application will receive SIGTERM after this
        
        # Resource management
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /var/log/bankcore
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      
      # Image pull secrets if using private registry
      imagePullSecrets:
      - name: registry-credentials